{"version":3,"file":"array.js","names":["ARRAY_REGEX","getArrayType","type","match","Error","array","isDynamic","isType","test","encode","buffer","value","arrayType","arrayLength","toBuffer","length","pack","Array","fill","concat","decode","Number","toNumber","subarray","unpack"],"sources":["../../../src/parsers/array.ts"],"sourcesContent":["import { pack, unpack } from '../packer';\nimport { DecodeArgs, Parser } from '../types';\nimport { concat, toBuffer, toNumber } from '../utils';\n\n// TODO: Add support for fixed length arrays\nconst ARRAY_REGEX = /^(.*)\\[]$/;\n\n/**\n * Get the type of the array.\n *\n * @param type The type to get the array type for.\n * @return The array type.\n */\nexport const getArrayType = (type: string): string => {\n  const match = type.match(ARRAY_REGEX);\n  if (match) {\n    return match[1];\n  }\n\n  throw new Error('Type is not an array type');\n};\n\nexport const array: Parser<unknown[]> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is an array type.\n   *\n   * @param type The type to check.\n   * @return Whether the type is a array type.\n   */\n  isType(type: string): boolean {\n    return ARRAY_REGEX.test(type);\n  },\n\n  encode({ type, buffer, value }): Uint8Array {\n    const arrayType = getArrayType(type);\n    const arrayLength = toBuffer(value.length);\n\n    return pack(new Array(value.length).fill(arrayType), value, concat([buffer, arrayLength]));\n  },\n\n  decode({ type, value }: DecodeArgs): unknown[] {\n    const arrayType = getArrayType(type);\n    const arrayLength = Number(toNumber(value.subarray(0, 32)));\n\n    return unpack(new Array(arrayLength).fill(arrayType), value.subarray(32));\n  }\n};\n"],"mappings":";;;;;;;AAAA;;AAEA;;AAGA,MAAMA,WAAW,GAAG,WAApB;;AAQO,MAAMC,YAAY,GAAIC,IAAD,IAA0B;EACpD,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWH,WAAX,CAAd;;EACA,IAAIG,KAAJ,EAAW;IACT,OAAOA,KAAK,CAAC,CAAD,CAAZ;EACD;;EAED,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD,CAPM;;;AASA,MAAMC,KAAwB,GAAG;EACtCC,SAAS,EAAE,IAD2B;;EAStCC,MAAM,CAACL,IAAD,EAAwB;IAC5B,OAAOF,WAAW,CAACQ,IAAZ,CAAiBN,IAAjB,CAAP;EACD,CAXqC;;EAatCO,MAAM,CAAC;IAAEP,IAAF;IAAQQ,MAAR;IAAgBC;EAAhB,CAAD,EAAsC;IAC1C,MAAMC,SAAS,GAAGX,YAAY,CAACC,IAAD,CAA9B;IACA,MAAMW,WAAW,GAAG,IAAAC,eAAA,EAASH,KAAK,CAACI,MAAf,CAApB;IAEA,OAAO,IAAAC,YAAA,EAAK,IAAIC,KAAJ,CAAUN,KAAK,CAACI,MAAhB,EAAwBG,IAAxB,CAA6BN,SAA7B,CAAL,EAA8CD,KAA9C,EAAqD,IAAAQ,aAAA,EAAO,CAACT,MAAD,EAASG,WAAT,CAAP,CAArD,CAAP;EACD,CAlBqC;;EAoBtCO,MAAM,CAAC;IAAElB,IAAF;IAAQS;EAAR,CAAD,EAAyC;IAC7C,MAAMC,SAAS,GAAGX,YAAY,CAACC,IAAD,CAA9B;IACA,MAAMW,WAAW,GAAGQ,MAAM,CAAC,IAAAC,eAAA,EAASX,KAAK,CAACY,QAAN,CAAe,CAAf,EAAkB,EAAlB,CAAT,CAAD,CAA1B;IAEA,OAAO,IAAAC,cAAA,EAAO,IAAIP,KAAJ,CAAUJ,WAAV,EAAuBK,IAAvB,CAA4BN,SAA5B,CAAP,EAA+CD,KAAK,CAACY,QAAN,CAAe,EAAf,CAA/C,CAAP;EACD;;AAzBqC,CAAjC"}