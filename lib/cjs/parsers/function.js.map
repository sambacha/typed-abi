{"version":3,"file":"function.js","names":["getFunction","input","fromHex","concat","address","selector","fn","isDynamic","encode","buffer","value","fixedBytes","type","decode","toHex","slice"],"sources":["../../../src/parsers/function.ts"],"sourcesContent":["import { DecodeArgs, EncodeArgs, FunctionLike, Parser, SolidityFunction } from '../types';\nimport { concat, fromHex, toHex } from '../utils';\nimport { fixedBytes } from './fixed-bytes';\n\n/**\n * Get the encoded function as buffer. It consists of the address (20 bytes) and function selector (4 bytes).\n *\n * @param input The function-like input.\n * @return The function as buffer.\n */\nexport const getFunction = (input: FunctionLike): Uint8Array => {\n  if (typeof input === 'string') {\n    return fromHex(input);\n  }\n\n  return concat([fromHex(input.address), fromHex(input.selector)]);\n};\n\nexport const fn: Parser<FunctionLike, SolidityFunction> = {\n  isDynamic: false,\n\n  encode({ buffer, value }: EncodeArgs<FunctionLike>): Uint8Array {\n    const fn = getFunction(value);\n    return fixedBytes.encode({ type: 'bytes24', buffer, value: fn });\n  },\n\n  decode({ value }: DecodeArgs): SolidityFunction {\n    return {\n      address: `0x${toHex(value.slice(0, 20))}`,\n      selector: toHex(value.slice(20, 24))\n    };\n  }\n};\n"],"mappings":";;;;;;;AACA;;AACA;;AAQO,MAAMA,WAAW,GAAIC,KAAD,IAAqC;EAC9D,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAO,IAAAC,cAAA,EAAQD,KAAR,CAAP;EACD;;EAED,OAAO,IAAAE,aAAA,EAAO,CAAC,IAAAD,cAAA,EAAQD,KAAK,CAACG,OAAd,CAAD,EAAyB,IAAAF,cAAA,EAAQD,KAAK,CAACI,QAAd,CAAzB,CAAP,CAAP;AACD,CANM;;;AAQA,MAAMC,EAA0C,GAAG;EACxDC,SAAS,EAAE,KAD6C;;EAGxDC,MAAM,CAAC;IAAEC,MAAF;IAAUC;EAAV,CAAD,EAA0D;IAC9D,MAAMJ,EAAE,GAAGN,WAAW,CAACU,KAAD,CAAtB;IACA,OAAOC,sBAAA,CAAWH,MAAX,CAAkB;MAAEI,IAAI,EAAE,SAAR;MAAmBH,MAAnB;MAA2BC,KAAK,EAAEJ;IAAlC,CAAlB,CAAP;EACD,CANuD;;EAQxDO,MAAM,CAAC;IAAEH;EAAF,CAAD,EAA0C;IAC9C,OAAO;MACLN,OAAO,EAAG,KAAI,IAAAU,YAAA,EAAMJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAN,CAA0B,EADnC;MAELV,QAAQ,EAAE,IAAAS,YAAA,EAAMJ,KAAK,CAACK,KAAN,CAAY,EAAZ,EAAgB,EAAhB,CAAN;IAFL,CAAP;EAID;;AAbuD,CAAnD"}