{"version":3,"file":"narrow.js","names":[],"sources":["../../../src/types/narrow.ts"],"sourcesContent":["/**\n * ts-toolbelt `Narrow` type\n * https://github.com/millsp/ts-toolbelt/blob/master/sources/Function/Narrow.ts\n */\n\nexport type Try<A1 extends any, A2 extends any, Catch = never> = A1 extends A2 ? A1 : Catch;\n\nexport type Narrowable = string | number | bigint | boolean;\n\ntype NarrowRaw<A> =\n  | (A extends [] ? [] : never)\n  | (A extends Narrowable ? A : never)\n  | {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [K in keyof A]: A[K] extends Function ? A[K] : NarrowRaw<A[K]>;\n    };\n\nexport type Narrow<A extends any> = Try<A, [], NarrowRaw<A>>;\n"],"mappings":""}