{"version":3,"file":"buffer.js","names":["BUFFER_WIDTH","HEX_REGEX","stripPrefix","value","startsWith","substring","getTextEncoder","TextEncoder","Encoder","require","getTextDecoder","encoding","Decoder","TextDecoder","toUtf8","data","decode","fromUtf8","encode","toHex","Array","from","map","n","toString","slice","join","fromHex","length","Error","match","Uint8Array","byte","parseInt","toBuffer","string","padStart","concat","buffers","reduce","a","b","buffer","set","target","position","subarray","addPadding","padding","Math","max","fill","toNumber","hex","BigInt"],"sources":["../../../src/utils/buffer.ts"],"sourcesContent":["const BUFFER_WIDTH = 32;\nconst HEX_REGEX = /^[a-f0-9]+$/i;\n\nexport type BinaryLike = string | number | bigint | ArrayBufferLike | number[];\n\nexport const stripPrefix = (value: string): string => {\n  if (value.startsWith('0x')) {\n    return value.substring(2);\n  }\n\n  return value;\n};\n\n/**\n * Returns an instance of `TextEncoder` that works with both Node.js and web browsers.\n */\nexport const getTextEncoder = (): TextEncoder => {\n  if (typeof TextEncoder === 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const Encoder = require('util').TextEncoder;\n    return new Encoder();\n  }\n\n  return new TextEncoder();\n};\n\n/**\n * Returns an instance of `TextDecoder` that works with both Node.js and web browsers.\n */\nexport const getTextDecoder = (encoding = 'utf8'): TextDecoder => {\n  if (typeof TextEncoder === 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const Decoder = require('util').TextDecoder;\n    return new Decoder(encoding);\n  }\n\n  return new TextDecoder(encoding);\n};\n\n/**\n * Get a buffer as UTF-8 encoded string.\n *\n * @param data The buffer to convert to UTF-8.\n * @return The buffer as UTF-8 encoded string.\n */\nexport const toUtf8 = (data: Uint8Array): string => {\n  return getTextDecoder().decode(data);\n};\n\n/**\n * Get a UTF-8 encoded string as buffer.\n *\n * @param data The string to convert to a buffer.\n * @return The buffer.\n */\nexport const fromUtf8 = (data: string): Uint8Array => {\n  return getTextEncoder().encode(data);\n};\n\n/**\n * Get a Uint8Array as hexadecimal string.\n *\n * @param data The buffer to convert to a hexadecimal string.\n * @return The buffer as hexadecimal string.\n */\nexport const toHex = (data: Uint8Array): string => {\n  return Array.from(data)\n    .map((n) => `0${n.toString(16)}`.slice(-2))\n    .join('');\n};\n\n/**\n * Get a hexadecimal string as Uint8Array.\n *\n * @param data The hexadecimal string to convert to a buffer.\n * @return The buffer.\n */\nexport const fromHex = (data: string): Uint8Array => {\n  if (data.startsWith('0x')) {\n    data = data.slice(2);\n  }\n\n  if (data.length % 2 !== 0) {\n    throw new Error('Length must be even');\n  }\n\n  if (!data.match(HEX_REGEX)) {\n    throw new Error('Input must be hexadecimal');\n  }\n\n  return new Uint8Array(data.match(/.{1,2}/g)!.map((byte) => parseInt(byte, 16)));\n};\n\n/**\n * Attempt to parse a value as Uint8Array. If `data` is a number, this will pad the buffer to 32 bytes.\n *\n * @param data The value to parse as Uint8Array.\n * @return The resulting Uint8Array.\n */\nexport const toBuffer = (data: BinaryLike): Uint8Array => {\n  if (typeof data === 'string') {\n    return fromHex(data);\n  }\n\n  if (typeof data === 'number' || typeof data === 'bigint') {\n    const string = data.toString(16);\n    return fromHex(string.padStart(BUFFER_WIDTH * 2, '0'));\n  }\n\n  return new Uint8Array(data);\n};\n\n/**\n * Safe function to merge multiple Uint8Arrays into a single Uint8array. This works with buffers of any size.\n *\n * @param buffers The buffers to combine.\n * @return The combined buffers.\n */\nexport const concat = (buffers: Uint8Array[]): Uint8Array => {\n  return buffers.reduce((a, b) => {\n    const buffer = new Uint8Array(a.length + b.length);\n    buffer.set(a);\n    buffer.set(b, a.length);\n\n    return buffer;\n  }, new Uint8Array(0));\n};\n\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target The buffer to set to.\n * @param buffer The buffer to set in the target.\n * @param position The position at which to set the target.\n * @return The combined buffer.\n */\nexport const set = (target: Uint8Array, buffer: Uint8Array, position: number): Uint8Array => {\n  return concat([target.subarray(0, position), buffer, target.subarray(position + buffer.length)]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer The buffer to add padding to.\n * @param [length] The number of bytes to pad the buffer to.\n * @return The padded buffer.\n */\nexport const addPadding = (buffer: Uint8Array, length = BUFFER_WIDTH): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n  return concat([buffer, padding]);\n};\n\n/**\n * Get a number from a buffer. Returns zero if the buffer is empty.\n *\n * @param buffer The buffer to get a number for.\n * @return The parsed number.\n */\nexport const toNumber = (buffer: Uint8Array): bigint => {\n  const hex = toHex(buffer);\n  if (hex.length === 0) {\n    return BigInt(0);\n  }\n\n  return BigInt(`0x${hex}`);\n};\n"],"mappings":"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"}