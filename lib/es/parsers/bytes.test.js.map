{"version":3,"file":"bytes.test.js","names":["fromHex","toHex","bytes","describe","it","expect","encode","type","value","buffer","Uint8Array","toBe","decode","skip","jest","fn","toStrictEqual"],"sources":["../../../src/parsers/bytes.test.ts"],"sourcesContent":["import { fromHex, toHex } from '../utils';\nimport { bytes } from './bytes';\n\ndescribe('bytes', () => {\n  describe('encode', () => {\n    it('encodes bytes', () => {\n      expect(toHex(bytes.encode({ type: 'bytes', value: 'ab', buffer: new Uint8Array() }))).toBe(\n        '0000000000000000000000000000000000000000000000000000000000000001ab00000000000000000000000000000000000000000000000000000000000000'\n      );\n    });\n  });\n\n  describe('decode', () => {\n    it('decodes encoded bytes', () => {\n      const value = fromHex(\n        '0000000000000000000000000000000000000000000000000000000000000001ab00000000000000000000000000000000000000000000000000000000000000'\n      );\n      expect(toHex(bytes.decode({ type: 'bytes', value, skip: jest.fn() }))).toStrictEqual('ab');\n    });\n  });\n});\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,UAA/B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEAC,QAAQ,CAAC,OAAD,EAAU,MAAM;EACtBA,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBC,EAAE,CAAC,eAAD,EAAkB,MAAM;MACxBC,MAAM,CAACJ,KAAK,CAACC,KAAK,CAACI,MAAN,CAAa;QAAEC,IAAI,EAAE,OAAR;QAAiBC,KAAK,EAAE,IAAxB;QAA8BC,MAAM,EAAE,IAAIC,UAAJ;MAAtC,CAAb,CAAD,CAAN,CAAN,CAAsFC,IAAtF,CACE,kIADF;IAGD,CAJC,CAAF;EAKD,CANO,CAAR;EAQAR,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBC,EAAE,CAAC,uBAAD,EAA0B,MAAM;MAChC,MAAMI,KAAK,GAAGR,OAAO,CACnB,kIADmB,CAArB;MAGAK,MAAM,CAACJ,KAAK,CAACC,KAAK,CAACU,MAAN,CAAa;QAAEL,IAAI,EAAE,OAAR;QAAiBC,KAAjB;QAAwBK,IAAI,EAAEC,IAAI,CAACC,EAAL;MAA9B,CAAb,CAAD,CAAN,CAAN,CAAuEC,aAAvE,CAAqF,IAArF;IACD,CALC,CAAF;EAMD,CAPO,CAAR;AAQD,CAjBO,CAAR"}