{"version":3,"file":"tuple.test.js","names":["fromHex","toHex","getTupleElements","tuple","describe","it","expect","toStrictEqual","isDynamic","toBe","isType","encode","type","value","buffer","Uint8Array","decode","skip","jest","fn","result","toHaveBeenCalledWith"],"sources":["../../../src/parsers/tuple.test.ts"],"sourcesContent":["import { DynamicFunction } from '../types';\nimport { fromHex, toHex } from '../utils';\nimport { getTupleElements, tuple } from './tuple';\n\ndescribe('getTupleElements', () => {\n  it('returns the elements of a tuple', () => {\n    expect(getTupleElements('(foo,bar)')).toStrictEqual(['foo', 'bar']);\n    expect(getTupleElements('(foo,bar[])')).toStrictEqual(['foo', 'bar[]']);\n\n    // TODO: Add support for nested tuples\n    // expect(getTupleElements('(foo,(bar,baz))')).toStrictEqual(['foo', '(bar,baz))']);\n  });\n});\n\ndescribe('tuple', () => {\n  describe('isDynamic', () => {\n    const isDynamic = tuple.isDynamic as DynamicFunction;\n\n    it('checks if one or more elements of the tuple are dynamic', () => {\n      expect(isDynamic('(uint256, bytes)')).toBe(true);\n\n      expect(isDynamic('(uint256, uint256)')).toBe(false);\n    });\n  });\n\n  describe('isType', () => {\n    it('checks if a type is a tuple type', () => {\n      expect(tuple.isType?.('(uint256)')).toBe(true);\n      expect(tuple.isType?.('(uint256, uint256)')).toBe(true);\n\n      expect(tuple.isType?.('uint256')).toBe(false);\n      expect(tuple.isType?.('(uint256)[]')).toBe(false);\n    });\n  });\n\n  describe('encode', () => {\n    it('encodes a static tuple', () => {\n      expect(toHex(tuple.encode({ type: '(uint256, uint256)', value: [12n, 34n], buffer: new Uint8Array() }))).toBe(\n        '000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000022'\n      );\n    });\n\n    it('encodes a dynamic tuple', () => {\n      expect(toHex(tuple.encode({ type: '(uint256, bytes)', value: [12n, 'ab'], buffer: new Uint8Array() }))).toBe(\n        '000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001ab00000000000000000000000000000000000000000000000000000000000000'\n      );\n    });\n  });\n\n  describe('decode', () => {\n    it('decodes an encoded static tuple', () => {\n      const value = fromHex(\n        '000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000022'\n      );\n      expect(tuple.decode({ type: '(uint256, uint256)', value, skip: jest.fn() })).toStrictEqual([12n, 34n]);\n    });\n\n    it('decodes an encoded dynamic tuple', () => {\n      const value = fromHex(\n        '000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001ab00000000000000000000000000000000000000000000000000000000000000'\n      );\n      const result = tuple.decode({ type: '(uint256, bytes)', value, skip: jest.fn() });\n\n      expect(result[0]).toBe(12n);\n      expect(toHex(result[1] as Uint8Array)).toBe('ab');\n    });\n\n    it('calls skip with the tuple length', () => {\n      const value = fromHex(\n        '000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000022'\n      );\n      const skip = jest.fn();\n\n      tuple.decode({ type: '(uint256,uint256)', value, skip });\n      expect(skip).toHaveBeenCalledWith(32);\n    });\n  });\n});\n"],"mappings":"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"}