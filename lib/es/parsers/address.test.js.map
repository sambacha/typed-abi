{"version":3,"file":"address.test.js","names":["fromHex","toHex","address","describe","it","expect","encode","type","buffer","Uint8Array","value","toBe","decode","skip","jest","fn"],"sources":["../../../src/parsers/address.test.ts"],"sourcesContent":["import { fromHex, toHex } from '../utils';\nimport { address } from './address';\n\ndescribe('address', () => {\n  describe('encode', () => {\n    it('encodes an address', () => {\n      expect(\n        toHex(\n          address.encode({\n            type: 'address',\n            buffer: new Uint8Array(),\n            value: '0x4bbeeb066ed09b7aed07bf39eee0460dfa261520'\n          })\n        )\n      ).toBe('0000000000000000000000004bbeeb066ed09b7aed07bf39eee0460dfa261520');\n    });\n  });\n\n  describe('decode', () => {\n    it('decodes an encoded address', () => {\n      const value = fromHex('0000000000000000000000004bbeeb066ed09b7aed07bf39eee0460dfa261520');\n      expect(address.decode({ type: 'address', value, skip: jest.fn() })).toBe(\n        '0x4bbeeb066ed09b7aed07bf39eee0460dfa261520'\n      );\n    });\n  });\n});\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEAC,QAAQ,CAAC,SAAD,EAAY,MAAM;EACxBA,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBC,EAAE,CAAC,oBAAD,EAAuB,MAAM;MAC7BC,MAAM,CACJJ,KAAK,CACHC,OAAO,CAACI,MAAR,CAAe;QACbC,IAAI,EAAE,SADO;QAEbC,MAAM,EAAE,IAAIC,UAAJ,EAFK;QAGbC,KAAK,EAAE;MAHM,CAAf,CADG,CADD,CAAN,CAQEC,IARF,CAQO,kEARP;IASD,CAVC,CAAF;EAWD,CAZO,CAAR;EAcAR,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBC,EAAE,CAAC,4BAAD,EAA+B,MAAM;MACrC,MAAMM,KAAK,GAAGV,OAAO,CAAC,kEAAD,CAArB;MACAK,MAAM,CAACH,OAAO,CAACU,MAAR,CAAe;QAAEL,IAAI,EAAE,SAAR;QAAmBG,KAAnB;QAA0BG,IAAI,EAAEC,IAAI,CAACC,EAAL;MAAhC,CAAf,CAAD,CAAN,CAAoEJ,IAApE,CACE,4CADF;IAGD,CALC,CAAF;EAMD,CAPO,CAAR;AAQD,CAvBO,CAAR"}