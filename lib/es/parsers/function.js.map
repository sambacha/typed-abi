{"version":3,"file":"function.js","names":["concat","fromHex","toHex","fixedBytes","getFunction","input","address","selector","fn","isDynamic","encode","buffer","value","type","decode","slice"],"sources":["../../../src/parsers/function.ts"],"sourcesContent":["import type { DecodeArgs, EncodeArgs, FunctionLike, Parser, SolidityFunction } from '../types';\nimport { concat, fromHex, toHex } from '../utils';\nimport { fixedBytes } from './fixed-bytes';\n\n/**\n * Get the encoded function as buffer. It consists of the address (20 bytes) and function selector (4 bytes).\n *\n * @param input The function-like input.\n * @return The function as buffer.\n */\nexport const getFunction = (input: FunctionLike): Uint8Array => {\n  if (typeof input === 'string') {\n    return fromHex(input);\n  }\n\n  return concat([fromHex(input.address), fromHex(input.selector)]);\n};\n\nexport const fn: Parser<FunctionLike, SolidityFunction> = {\n  isDynamic: false,\n\n  encode({ buffer, value }: EncodeArgs<FunctionLike>): Uint8Array {\n    const fn = getFunction(value);\n    return fixedBytes.encode({ type: 'bytes24', buffer, value: fn });\n  },\n\n  decode({ value }: DecodeArgs): SolidityFunction {\n    return {\n      address: `0x${toHex(value.slice(0, 20))}`,\n      selector: toHex(value.slice(20, 24))\n    };\n  }\n};\n"],"mappings":"AACA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,UAAvC;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAqC;EAC9D,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAOJ,OAAO,CAACI,KAAD,CAAd;EACD;;EAED,OAAOL,MAAM,CAAC,CAACC,OAAO,CAACI,KAAK,CAACC,OAAP,CAAR,EAAyBL,OAAO,CAACI,KAAK,CAACE,QAAP,CAAhC,CAAD,CAAb;AACD,CANM;AAQP,OAAO,MAAMC,EAA0C,GAAG;EACxDC,SAAS,EAAE,KAD6C;;EAGxDC,MAAM,CAAC;IAAEC,MAAF;IAAUC;EAAV,CAAD,EAA0D;IAC9D,MAAMJ,EAAE,GAAGJ,WAAW,CAACQ,KAAD,CAAtB;IACA,OAAOT,UAAU,CAACO,MAAX,CAAkB;MAAEG,IAAI,EAAE,SAAR;MAAmBF,MAAnB;MAA2BC,KAAK,EAAEJ;IAAlC,CAAlB,CAAP;EACD,CANuD;;EAQxDM,MAAM,CAAC;IAAEF;EAAF,CAAD,EAA0C;IAC9C,OAAO;MACLN,OAAO,EAAG,KAAIJ,KAAK,CAACU,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAD,CAAqB,EADnC;MAELR,QAAQ,EAAEL,KAAK,CAACU,KAAK,CAACG,KAAN,CAAY,EAAZ,EAAgB,EAAhB,CAAD;IAFV,CAAP;EAID;;AAbuD,CAAnD"}