{"version":3,"file":"string.test.js","names":["fromHex","toHex","string","describe","it","expect","encode","type","value","buffer","Uint8Array","toBe","decode","skip","jest","fn"],"sources":["../../../src/parsers/string.test.ts"],"sourcesContent":["import { fromHex, toHex } from '../utils';\nimport { string } from './string';\n\ndescribe('string', () => {\n  describe('encode', () => {\n    it('encodes a string', () => {\n      expect(toHex(string.encode({ type: 'string', value: 'foo bar baz qux', buffer: new Uint8Array() }))).toBe(\n        '000000000000000000000000000000000000000000000000000000000000000f666f6f206261722062617a207175780000000000000000000000000000000000'\n      );\n    });\n  });\n\n  describe('decode', () => {\n    it('decodes an encoded string', () => {\n      const value = fromHex(\n        '000000000000000000000000000000000000000000000000000000000000000f666f6f206261722062617a207175780000000000000000000000000000000000'\n      );\n      expect(string.decode({ type: 'string', value, skip: jest.fn() })).toBe('foo bar baz qux');\n    });\n  });\n});\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,UAA/B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEAC,QAAQ,CAAC,QAAD,EAAW,MAAM;EACvBA,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBC,EAAE,CAAC,kBAAD,EAAqB,MAAM;MAC3BC,MAAM,CAACJ,KAAK,CAACC,MAAM,CAACI,MAAP,CAAc;QAAEC,IAAI,EAAE,QAAR;QAAkBC,KAAK,EAAE,iBAAzB;QAA4CC,MAAM,EAAE,IAAIC,UAAJ;MAApD,CAAd,CAAD,CAAN,CAAN,CAAqGC,IAArG,CACE,kIADF;IAGD,CAJC,CAAF;EAKD,CANO,CAAR;EAQAR,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBC,EAAE,CAAC,2BAAD,EAA8B,MAAM;MACpC,MAAMI,KAAK,GAAGR,OAAO,CACnB,kIADmB,CAArB;MAGAK,MAAM,CAACH,MAAM,CAACU,MAAP,CAAc;QAAEL,IAAI,EAAE,QAAR;QAAkBC,KAAlB;QAAyBK,IAAI,EAAEC,IAAI,CAACC,EAAL;MAA/B,CAAd,CAAD,CAAN,CAAkEJ,IAAlE,CAAuE,iBAAvE;IACD,CALC,CAAF;EAMD,CAPO,CAAR;AAQD,CAjBO,CAAR"}