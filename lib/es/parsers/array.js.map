{"version":3,"file":"array.js","names":["pack","unpack","concat","toBuffer","toNumber","ARRAY_REGEX","getArrayType","type","match","Error","array","isDynamic","isType","test","encode","buffer","value","arrayType","arrayLength","length","Array","fill","decode","Number","subarray"],"sources":["../../../src/parsers/array.ts"],"sourcesContent":["import { pack, unpack } from '../packer';\nimport type { DecodeArgs, Parser } from '../types';\nimport { concat, toBuffer, toNumber } from '../utils';\n\n// TODO: Add support for fixed length arrays\nconst ARRAY_REGEX = /^(.*)\\[]$/;\n\n/**\n * Get the type of the array.\n *\n * @param type The type to get the array type for.\n * @return The array type.\n */\nexport const getArrayType = (type: string): string => {\n  const match = type.match(ARRAY_REGEX);\n  if (match) {\n    // nullish coalescing operator (??) enables us to specify a fallback for when a value is null or undefined.\n    return match[1] ?? '';\n  }\n\n  throw new Error('Type is not an array type');\n};\n\nexport const array: Parser<unknown[]> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is an array type.\n   *\n   * @param type The type to check.\n   * @return Whether the type is a array type.\n   */\n  isType(type: string): boolean {\n    return ARRAY_REGEX.test(type);\n  },\n\n  encode({ type, buffer, value }): Uint8Array {\n    const arrayType = getArrayType(type);\n    const arrayLength = toBuffer(value.length);\n\n    return pack(new Array(value.length).fill(arrayType), value, concat([buffer, arrayLength]));\n  },\n\n  decode({ type, value }: DecodeArgs): unknown[] {\n    const arrayType = getArrayType(type);\n    const arrayLength = Number(toNumber(value.subarray(0, 32)));\n\n    return unpack(new Array(arrayLength).fill(arrayType), value.subarray(32));\n  }\n};\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,WAA7B;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,UAA3C,C,CAEA;;AACA,MAAMC,WAAW,GAAG,WAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAA0B;EACpD,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWH,WAAX,CAAd;;EACA,IAAIG,KAAJ,EAAW;IAAA;;IACT;IACA,kBAAOA,KAAK,CAAC,CAAD,CAAZ,6CAAmB,EAAnB;EACD;;EAED,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD,CARM;AAUP,OAAO,MAAMC,KAAwB,GAAG;EACtCC,SAAS,EAAE,IAD2B;;EAGtC;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM,CAACL,IAAD,EAAwB;IAC5B,OAAOF,WAAW,CAACQ,IAAZ,CAAiBN,IAAjB,CAAP;EACD,CAXqC;;EAatCO,MAAM,CAAC;IAAEP,IAAF;IAAQQ,MAAR;IAAgBC;EAAhB,CAAD,EAAsC;IAC1C,MAAMC,SAAS,GAAGX,YAAY,CAACC,IAAD,CAA9B;IACA,MAAMW,WAAW,GAAGf,QAAQ,CAACa,KAAK,CAACG,MAAP,CAA5B;IAEA,OAAOnB,IAAI,CAAC,IAAIoB,KAAJ,CAAUJ,KAAK,CAACG,MAAhB,EAAwBE,IAAxB,CAA6BJ,SAA7B,CAAD,EAA0CD,KAA1C,EAAiDd,MAAM,CAAC,CAACa,MAAD,EAASG,WAAT,CAAD,CAAvD,CAAX;EACD,CAlBqC;;EAoBtCI,MAAM,CAAC;IAAEf,IAAF;IAAQS;EAAR,CAAD,EAAyC;IAC7C,MAAMC,SAAS,GAAGX,YAAY,CAACC,IAAD,CAA9B;IACA,MAAMW,WAAW,GAAGK,MAAM,CAACnB,QAAQ,CAACY,KAAK,CAACQ,QAAN,CAAe,CAAf,EAAkB,EAAlB,CAAD,CAAT,CAA1B;IAEA,OAAOvB,MAAM,CAAC,IAAImB,KAAJ,CAAUF,WAAV,EAAuBG,IAAvB,CAA4BJ,SAA5B,CAAD,EAAyCD,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAzC,CAAb;EACD;;AAzBqC,CAAjC"}