{"version":3,"file":"bytes.js","names":["addPadding","concat","toBuffer","toNumber","bytes","isDynamic","encode","buffer","value","bufferValue","paddedSize","Math","ceil","byteLength","decode","slice","length","Number","subarray"],"sources":["../../../src/parsers/bytes.ts"],"sourcesContent":["import type { BytesLike, DecodeArgs, Parser } from '../types';\nimport { addPadding, concat, toBuffer, toNumber } from '../utils';\n\nexport const bytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: true,\n\n  encode({ buffer, value }): Uint8Array {\n    const bufferValue = toBuffer(value);\n    const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n\n    return concat([buffer, toBuffer(bufferValue.byteLength), addPadding(bufferValue, paddedSize)]);\n  },\n\n  decode({ value }: DecodeArgs): Uint8Array {\n    const buffer = value.slice(0, 32);\n    const length = Number(toNumber(buffer));\n\n    return value.subarray(32, 32 + length);\n  }\n};\n"],"mappings":"AACA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,QAAvC,QAAuD,UAAvD;AAEA,OAAO,MAAMC,KAAoC,GAAG;EAClDC,SAAS,EAAE,IADuC;;EAGlDC,MAAM,CAAC;IAAEC,MAAF;IAAUC;EAAV,CAAD,EAAgC;IACpC,MAAMC,WAAW,GAAGP,QAAQ,CAACM,KAAD,CAA5B;IACA,MAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,CAACI,UAAZ,GAAyB,EAAnC,IAAyC,EAA5D;IAEA,OAAOZ,MAAM,CAAC,CAACM,MAAD,EAASL,QAAQ,CAACO,WAAW,CAACI,UAAb,CAAjB,EAA2Cb,UAAU,CAACS,WAAD,EAAcC,UAAd,CAArD,CAAD,CAAb;EACD,CARiD;;EAUlDI,MAAM,CAAC;IAAEN;EAAF,CAAD,EAAoC;IACxC,MAAMD,MAAM,GAAGC,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAf;IACA,MAAMC,MAAM,GAAGC,MAAM,CAACd,QAAQ,CAACI,MAAD,CAAT,CAArB;IAEA,OAAOC,KAAK,CAACU,QAAN,CAAe,EAAf,EAAmB,KAAKF,MAAxB,CAAP;EACD;;AAfiD,CAA7C"}