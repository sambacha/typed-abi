{"version":3,"file":"iterator.test.js","names":["iterate","fromHex","toHex","describe","it","buffer","iterator","expect","next","value","toBe","skip","toThrow"],"sources":["../../src/iterator.test.ts"],"sourcesContent":["import { iterate } from './iterator';\nimport { fromHex, toHex } from './utils';\n\ndescribe('iterate', () => {\n  it('iterates over a buffer and yields the chunks', () => {\n    const buffer = fromHex('1234567890');\n    const iterator = iterate(buffer, 1);\n\n    expect(toHex(iterator.next().value.value)).toBe('1234567890');\n    expect(toHex(iterator.next().value.value)).toBe('34567890');\n    expect(toHex(iterator.next().value.value)).toBe('567890');\n    expect(toHex(iterator.next().value.value)).toBe('7890');\n    expect(toHex(iterator.next().value.value)).toBe('90');\n  });\n\n  it('can skip a number of bytes', () => {\n    const buffer = fromHex('1234567890');\n    const iterator = iterate(buffer, 1);\n\n    const { value, skip } = iterator.next().value;\n    expect(toHex(value)).toBe('1234567890');\n\n    skip(1);\n\n    expect(toHex(iterator.next().value.value)).toBe('567890');\n  });\n\n  it('throws if the specified number of bytes is invalid', () => {\n    const buffer = fromHex('1234567890');\n    const iterator = iterate(buffer, 3);\n\n    const { skip } = iterator.next().value;\n    expect(() => skip(1)).toThrow();\n  });\n});\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,SAA/B;AAEAC,QAAQ,CAAC,SAAD,EAAY,MAAM;EACxBC,EAAE,CAAC,8CAAD,EAAiD,MAAM;IACvD,MAAMC,MAAM,GAAGJ,OAAO,CAAC,YAAD,CAAtB;IACA,MAAMK,QAAQ,GAAGN,OAAO,CAACK,MAAD,EAAS,CAAT,CAAxB;IAEAE,MAAM,CAACL,KAAK,CAACI,QAAQ,CAACE,IAAT,GAAgBC,KAAhB,CAAsBA,KAAvB,CAAN,CAAN,CAA2CC,IAA3C,CAAgD,YAAhD;IACAH,MAAM,CAACL,KAAK,CAACI,QAAQ,CAACE,IAAT,GAAgBC,KAAhB,CAAsBA,KAAvB,CAAN,CAAN,CAA2CC,IAA3C,CAAgD,UAAhD;IACAH,MAAM,CAACL,KAAK,CAACI,QAAQ,CAACE,IAAT,GAAgBC,KAAhB,CAAsBA,KAAvB,CAAN,CAAN,CAA2CC,IAA3C,CAAgD,QAAhD;IACAH,MAAM,CAACL,KAAK,CAACI,QAAQ,CAACE,IAAT,GAAgBC,KAAhB,CAAsBA,KAAvB,CAAN,CAAN,CAA2CC,IAA3C,CAAgD,MAAhD;IACAH,MAAM,CAACL,KAAK,CAACI,QAAQ,CAACE,IAAT,GAAgBC,KAAhB,CAAsBA,KAAvB,CAAN,CAAN,CAA2CC,IAA3C,CAAgD,IAAhD;EACD,CATC,CAAF;EAWAN,EAAE,CAAC,4BAAD,EAA+B,MAAM;IACrC,MAAMC,MAAM,GAAGJ,OAAO,CAAC,YAAD,CAAtB;IACA,MAAMK,QAAQ,GAAGN,OAAO,CAACK,MAAD,EAAS,CAAT,CAAxB;IAEA,MAAM;MAAEI,KAAF;MAASE;IAAT,IAAkBL,QAAQ,CAACE,IAAT,GAAgBC,KAAxC;IACAF,MAAM,CAACL,KAAK,CAACO,KAAD,CAAN,CAAN,CAAqBC,IAArB,CAA0B,YAA1B;IAEAC,IAAI,CAAC,CAAD,CAAJ;IAEAJ,MAAM,CAACL,KAAK,CAACI,QAAQ,CAACE,IAAT,GAAgBC,KAAhB,CAAsBA,KAAvB,CAAN,CAAN,CAA2CC,IAA3C,CAAgD,QAAhD;EACD,CAVC,CAAF;EAYAN,EAAE,CAAC,oDAAD,EAAuD,MAAM;IAC7D,MAAMC,MAAM,GAAGJ,OAAO,CAAC,YAAD,CAAtB;IACA,MAAMK,QAAQ,GAAGN,OAAO,CAACK,MAAD,EAAS,CAAT,CAAxB;IAEA,MAAM;MAAEM;IAAF,IAAWL,QAAQ,CAACE,IAAT,GAAgBC,KAAjC;IACAF,MAAM,CAAC,MAAMI,IAAI,CAAC,CAAD,CAAX,CAAN,CAAsBC,OAAtB;EACD,CANC,CAAF;AAOD,CA/BO,CAAR"}